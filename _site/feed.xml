<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    
    <title type="text" xml:lang="en">RoginFarrer.com — Tech, Design, and Theater</title>
    <link type="application/atom+xml" href="http://roginfarrer.com/feed" rel="self"/>
    <link type="text" href="http://roginfarrer.com" rel="alternate"/>
    <updated>2014-12-16T11:49:08-05:00</updated>
    <id>http://roginfarrer.com</id>
    <author>
        <name>Rogin Farrer</name>
    </author>
    <rights>Copyright (c) 2014, Rogin Farrer; all rights reserved.</rights>
    
    
    <entry>
        <title>Hide Facebook's News Feed (And Other Annoyances)</title>
        <link href="http://roginfarrer.com/quiet-facebook"/>
        <updated>2014-12-15T00:00:00-05:00</updated>
        <id>http://roginfarrer.com/one-easy-hack-to-make-facebook-less-distracting</id>
        <content type="html">&lt;p&gt;I’m not a big fan of Facebook, but because so much of my social life and connections operate through their service, I don’t really feel like I can quit it. &lt;/p&gt;

&lt;p&gt;Still, I really hate how distracting it can be. We’ve all gone down the never-ending vortex that is the news feed.&lt;/p&gt;

&lt;p&gt;In an effort to minimize Facebook in as much of my life as possible, I’ve taken some decidedly simple steps: I’ve deleted the Facebook app from all of my mobile devices, and if I really need to get away from it, I block &lt;em&gt;m.facebook.com&lt;/em&gt; from Safari using iOS Restrictions. (I can disable it easily, but the obstacle of doing so can be enough to keep me off the site.) Doing this still allows me to use the Messenger app, which is all I need on the go.&lt;/p&gt;

&lt;p&gt;Then there’s the desktop, which isn’t so simple. I still need a way to see my notifications and people’s profiles, but all that other stuff can go. Fortunately, I’ve found a way to do just that.&lt;/p&gt;

&lt;figure class=&quot;imgbleed&quot;&gt;&lt;img src=&quot;http://cdn.roginfarrer.com/quiet-facebook.png&quot; /&gt;&lt;figcaption&gt;Where&#39;d the news feed go?? :)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The first thing I eliminated was the news feed, which I accomplished by using Max Friedrich’s &lt;a href=&quot;https://github.com/maxfriedrich/quiet-facebook&quot;&gt;Quiet Facebook&lt;/a&gt;, a custom stylesheet that cleanly removes the news feed from the web page.&lt;/p&gt;

&lt;p&gt;That satisfied for me for a while, but then I started finding other elements on the  page to distract me, like TRENDING NEWS (ugh). So I made an addition to the stylesheet to block out Trending News and Suggested Pages/Groups. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/roginfarrer/quiet-facebook&quot;&gt;Download my updated stylesheet here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s super easy to set up. Download it to you desktop and unzip the folder. Then open Preferences in Safari, navigate to the Advanced tab, and in the Style sheet dropdown, select &lt;code&gt;quiet-facebook.css&lt;/code&gt;. Boom. It’s gone.&lt;/p&gt;

&lt;p&gt;Huzzah! A minimalist Facebook experience.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Starting A Blog With Jekyll</title>
        <link href="http://roginfarrer.com/getting-started-with-jekyll"/>
        <updated>2014-12-14T00:00:00-05:00</updated>
        <id>http://roginfarrer.com/starting-a-blog-with-jekyll</id>
        <content type="html">&lt;p&gt;Last week I rebuilt this site on &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, and it’s freaking awesome.&lt;/p&gt;

&lt;p&gt;I’ve heard the name Jekyll tossed around on the interwebs for a while now, but I never completely understood how it worked. When I pulled up their homepage, I immediately closed the page with just a hint that I would have to use Terminal.&lt;/p&gt;

&lt;p&gt;But the truth is, Jekyll isn’t all that complicated, once you break it down into its parts. It took me a whole day to figure it out, port over my css and html, and configure it for live deployment. But that was because I had about 10 tabs open each telling me what to do. &lt;/p&gt;

&lt;p&gt;So for all you non-programmers interested in Jekyll, this is for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But first!&lt;/strong&gt; I want to reiterate that I’m no programmer. I’m only somewhat familiar with Javascript and PHP. I can’t tell you how the engine behind Jekyll works. But, I can get you up in running in laymen’s terms.&lt;/p&gt;

&lt;h4 id=&quot;here-we-gohttpyoutubek900hqbnc14&quot;&gt;&lt;a href=&quot;http://youtu.be/k900hqBNc14&quot;&gt;Here we go!&lt;/a&gt;&lt;/h4&gt;

&lt;h2 id=&quot;what-were-doing&quot;&gt;What we’re doing&lt;/h2&gt;

&lt;p&gt;Okay, so there’s many ways to build a Jekyll website. This process will all depend on where you want to host your site and how you like to work with your stylesheets. So to clarify, here’s what I’m going to explain:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How to install Jekyll to a local directory&lt;/li&gt;
  &lt;li&gt;How to incorporate &lt;a href=&quot;http://compass-style.org&quot;&gt;Compass&lt;/a&gt; and &lt;a href=&quot;http://sass-lang.com&quot;&gt;SASS&lt;/a&gt; into the workflow&lt;/li&gt;
  &lt;li&gt;Setting up &lt;a href=&quot;http://github.com&quot;&gt;Github Pages&lt;/a&gt; hosting&lt;/li&gt;
  &lt;li&gt;Configuring &lt;a href=&quot;https://mac.github.com&quot;&gt;Github for Mac&lt;/a&gt; to easily deploy your local repository.&lt;/li&gt;
  &lt;li&gt;Setting up &lt;a href=&quot;http://s3.amazonaws.com&quot;&gt;Amazon S3&lt;/a&gt; and Cloudfront for a quick and dirty CDN.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Whew! Okay, now we can start.&lt;/p&gt;

&lt;h2 id=&quot;what-you-need-to-know-first&quot;&gt;What you need to know first&lt;/h2&gt;

&lt;p&gt;Let’s first define Jekyll in it’s simplest terms: &lt;strong&gt;Jekyll is “a simple, blog aware, static site generator.”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you’re a casual designer/web coder like me, you’re somewhat familiar with this generation concept. In Wordpress, for example, themes include a &lt;code&gt;header.php&lt;/code&gt;, &lt;code&gt;index.php&lt;/code&gt;, and a &lt;code&gt;footer.php&lt;/code&gt;. When you visit your webpage, Wordpress then merges all these files together, the PHP generating HTML that is spit out to your browser.&lt;/p&gt;

&lt;p&gt;Jekyll works in a similar way. &lt;em&gt;Except there’s no PHP.&lt;/em&gt; Instead of calling the header with something like &lt;code&gt;&amp;lt;?php get_header(); ?&amp;gt;&lt;/code&gt;, we will use Liquid tags, which look like this: &lt;code&gt;{ % include header.html % }&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So now we understand two portions of the Jekyll directory. We have a &lt;code&gt;_layouts&lt;/code&gt; folder that holds are page templates (i.e., posts, pages, homepage, and more). We also have an &lt;code&gt;_includes&lt;/code&gt; folder for modules we use across every page, like the HTML head, header, and footer. &lt;/p&gt;

&lt;p&gt;We also have a &lt;code&gt;_posts&lt;/code&gt; folder for our blog posts, a &lt;code&gt;_sass&lt;/code&gt; folder for our not-yet-synthesized SCSS files, and a &lt;code&gt;css&lt;/code&gt; folder for our synthesized CSS files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOLD!&lt;/strong&gt; If you’re not already familiar with the SASS language, I highly suggest you read through their website. It’s pretty easy to pickup, and it makes organizing your styles &lt;em&gt;way easier&lt;/em&gt; than with plain CSS.&lt;/p&gt;

&lt;p&gt;We also have a &lt;code&gt;_config.yml&lt;/code&gt; file which we’ll use later to configure our site’s “settings.” (I use quotations because that’s not &lt;em&gt;really&lt;/em&gt; what it’s called, but it’s easier to understand that way.)&lt;/p&gt;

&lt;p&gt;And finally, there’s a &lt;code&gt;_site&lt;/code&gt; folder that functions similarly to a &lt;code&gt;public_html&lt;/code&gt; folder. It’s where Jekyll synthesizes our static site. We’ll leave this folder alone so Jekyll can do it’s thing without us getting in the way.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-local-directory&quot;&gt;Setting up the local directory&lt;/h2&gt;

&lt;p&gt;Navigate to where you want your Jekyll installation to live, and create a folder for the project. I’ll call it &lt;code&gt;jekyll&lt;/code&gt; for simplicity’s sake.&lt;/p&gt;

&lt;p&gt;Now open up Terminal. It’s time to install Jekyll and some of the tools we need. &lt;/p&gt;

&lt;h3 id=&quot;install-jekyll&quot;&gt;Install Jekyll&lt;/h3&gt;

&lt;p&gt;In Terminal, enter these lines to create a Jekyll installation:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /your/folder/location/jekyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo gem install jekyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll new .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this we navigated to the folder that we want to install jekyll into, we installed Jekyll (&lt;code&gt;sudo&lt;/code&gt; to bypass permission errors), and created a new Jekyll repository in our folder. At this point, Jekyll has built a skeleton directory in the folder. I encourage you to stop at this point and poke around and get familiar with the file structure.&lt;/p&gt;

&lt;h3 id=&quot;installing-compass-and-sass&quot;&gt;Installing Compass and Sass&lt;/h3&gt;

&lt;p&gt;This one took me a while to figure out, because when you install Compass and create a build, it adds its own SASS and stylesheet folders. It took me a little while to figure out how to configure Compass to find my Sass files and then synthesize them into the right folder. So I’ll break it down.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo gem install sass
sudo gem install compass
compass create&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Okay, so at this point Compass has added three folders: &lt;code&gt;config.rb&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt; (as distinct from &lt;code&gt;_sass&lt;/code&gt;), and &lt;code&gt;stylesheets&lt;/code&gt;. It’s now time to decide how you want to organize your assets. I decided to keep the structure from the Jekyll installation, so I deleted &lt;code&gt;sass&lt;/code&gt; and &lt;code&gt;stylesheets&lt;/code&gt;. Then open &lt;code&gt;config.rb&lt;/code&gt; in a text editor.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Change line 6 to:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;css_dir = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;css&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Change line 7 to:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;sass_dir = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_sass&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compass should now do its job correctly.&lt;/p&gt;

&lt;h3 id=&quot;now-for-configyml&quot;&gt;Now for _config.yml&lt;/h3&gt;

&lt;p&gt;In this file, you configure a lot of the major variables for your site, like its URL path, name, description, directory, etc. There’s a bunch of things you can do here, but to get you started, here’s what I use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nv&quot;&gt;source: &lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;destination: &lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_site&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;includes: &lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_includes&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;markdown: &lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;kramdown&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;permalink: &lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;/:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;name: &lt;/span&gt;         &lt;span class=&quot;nx&quot;&gt;RoginFarrer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;base_url: &lt;/span&gt;     &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;url: &lt;/span&gt;          &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roginfarrer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;description: &lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&amp;quot;A blog covering Tech news, design, productivity, health, and the arts by Rogin Farrer.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;root_desc: &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;RoginFarrer.com — Tech, Design, and Theater&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;exclude: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;README.markdown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;config.rb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;include: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;.htaccess&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;paginate: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be sure to change the variables like &lt;code&gt;name&lt;/code&gt; to your own!&lt;/p&gt;

&lt;h3 id=&quot;local-repository-complete&quot;&gt;Local repository complete!&lt;/h3&gt;

&lt;p&gt;We’ve now got our local directory up and running! When you’re ready to open your site locally, open your terminal to a new window.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /your/folder/location/jekyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve -w&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Terminal will start running Jekyll! It will also spit out a local web address like &lt;code&gt;http://127.0.0.1:4000/&lt;/code&gt; which you can enter to your browser. BAM! There’s your site!&lt;/p&gt;

&lt;p&gt;Then to get compass running, type in the usual command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;compass watch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it! You’re good to go with your local repository.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-github-pages&quot;&gt;Setting up GitHub Pages&lt;/h2&gt;

&lt;p&gt;Conveniently, GitHub offers users one free website that lives at `http://yourusername.github.io. We’re going to set up our new Jekyll repository there.&lt;/p&gt;

&lt;p&gt;We’re also going to need GitHub for Mac. If you’re like me, you are probably pretty confused by the interface. No worries! We’ll get through it.&lt;/p&gt;

&lt;p&gt;In the upper left, click on the plus to add a new repository. Because we’ve already set up our Jekyll directory, highlight “Add” at the top locate the folder. Then hit ‘Create Repository.’&lt;/p&gt;

&lt;figure&gt;
&lt;img class=&quot;center&quot; src=&quot;http://cdn.roginfarrer.com/Screen-Shot-2014-12-14-00-19-05.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Now we have to make our first ‘commit,’ which is essentially our first sync to the GitHub servers. In the ‘Summary’ box, type something like “Initial commit,” and then hit ‘Commit &amp;amp; Sync’ in the upper right.&lt;/p&gt;

&lt;p&gt;Another dialogue box comes up, and now we’ll have to name the repository. Enter &lt;code&gt;yourusername.github.io&lt;/code&gt;. Then hit ‘Push Repository.’&lt;/p&gt;

&lt;h2 id=&quot;success&quot;&gt;Success!&lt;/h2&gt;

&lt;p&gt;And there you are! You’ve got a new Jekyll site published on the web. For more on how to publish posts and pages, I highly recommend you check out &lt;a href=&quot;http://jekyllrb.com/docs/&quot;&gt;Jekyll’s own documentation&lt;/a&gt;. They’re thorough and pretty helpful.&lt;/p&gt;

&lt;h2 id=&quot;why-jekyll&quot;&gt;Why Jekyll?&lt;/h2&gt;

&lt;p&gt;Now that we’ve got our Jekyll site up and running, let’s talk about the advantages of Jekyll over conventional blogging platforms. While a flat-file structure lacks any kind of user interface or WYSIWYG editor, in return we benefit from the flexibility and ease of development.&lt;/p&gt;

&lt;h3 id=&quot;easy-deployment&quot;&gt;Easy deployment&lt;/h3&gt;

&lt;p&gt;While Wordpress is a powerful platform in its own right, modifying your theme files is tedious and disorganized. As someone who is constantly making tweaks to my site’s source files, I’d have to jump through many hoops to do so in Wordpress. To try any changes locally, I’d have to make sure I had an updated directory on my computer, make my changes, then use FTP to overwrite the files on my host’s server. If I wanted to make changes directly to my live site, I’d either have to use Wordpress’s clunky file editor or edit through the FTP client. &lt;/p&gt;

&lt;p&gt;In this case, I’d have numerous versions of my theme all over my drive, and could never be sure of which version was which. &lt;/p&gt;

&lt;p&gt;Jekyll keeps your local directory and the deployed directory in sync. I can use my local directory to easily and quickly make changes, and with a click of a button, it can be synced to my deployed repository. Easy-peasy. &lt;/p&gt;

&lt;h3 id=&quot;flexibility&quot;&gt;Flexibility&lt;/h3&gt;

&lt;p&gt;I can’t tell you how many hours I have lost trying to create custom post types for Wordpress. The task involves creating new templates, adding custom fields to the post editor, and making additions to &lt;code&gt;functions.php&lt;/code&gt;. Not being a programmer, it was incredibly frustrating.&lt;/p&gt;

&lt;p&gt;With Jekyll, custom post types are a breeze. They only require a new template in the &lt;code&gt;_layouts&lt;/code&gt; folder. The ability to create your own liquid tags in a posts Front Matter make link posts really easy.&lt;/p&gt;

&lt;p&gt;Front Matter also makes adding meta content to a page super easy. The way I have my homepage now, I like to publish a truncated post summary with links to the full page. Doing this on Wordpress can involve plugins, adding input fields to the post editor, and other headaches. But with Front Matter, I only need to add another line for &lt;code&gt;summary&lt;/code&gt;, which i can reference in my &lt;code&gt;index.html&lt;/code&gt; with a liquid tag, like ``.&lt;/p&gt;

&lt;h2 id=&quot;theres-a-lot-more-to-like&quot;&gt;There’s a lot more to like&lt;/h2&gt;

&lt;p&gt;I’ve only scratched the surface on what Jekyll can do, and I’m still discovering, too. I just set up Pygments as my syntax highlighter, for instance. (If a tutorial for that sounds interesting, let me know.) While Jekyll can look a little scary, it’s really a lot of fun and easy to learn. Hope this helps anyone getting started!&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Hi, I'm Rogin</title>
        <link href="http://roginfarrer.com/hi-im-rogin"/>
        <updated>2014-11-29T00:00:00-05:00</updated>
        <id>http://roginfarrer.com/hi-im-rogin</id>
        <content type="html">&lt;p&gt;For a few years now I’ve called myself a writer. But it seems that I’ve been writing less and less. &lt;/p&gt;

&lt;p&gt;I haven’t published a post on &lt;a href=&quot;http://thedapperscholar.com&quot;&gt;The Dapper Scholar&lt;/a&gt; in 7 or 8 months, which I’ve decided to retire. I do keep a journal semi-regularly, but aside from the occasional &lt;a href=&quot;http://twitter.com/RoginFarrer&quot;&gt;Twitter post&lt;/a&gt;, I rarely write anything for other people to see. But with a revamped roginfarrer.com, I’m making a comeback. This is hopefully the first post of what will be a regular chain of posts for a good while.&lt;/p&gt;

&lt;h3 id=&quot;so-what-is-this-about&quot;&gt;So… what is this about?&lt;/h3&gt;

&lt;p&gt;I don’t want to put any constraints on my writing right now because I’m not sure what I want to focus on. I want to write about the things I care about, and maybe someday the topic of this site will flesh out into a focused subject. &lt;/p&gt;

&lt;p&gt;However, I &lt;em&gt;can&lt;/em&gt; drop a few hints about the things running through my mind, which will give you an idea of what I’ll be writing about soon:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It’s my senior year of college, and I’m starting to worry about getting a job after graduation. Given my skill set and field (drama), most of the opportunities I’m qualified for are unpaid internships or internships that house you with very low pay.&lt;/li&gt;
  &lt;li&gt;In case it’s not obvious, I like theater and the arts. That might come up.&lt;/li&gt;
  &lt;li&gt;I’ve thought a lot about the line between boy and man, child and adult, for a long while now. The distinction is becoming ever more relevant in my life as graduation day approaches. At what point do I cross over into adulthood, if I haven’t already? Does adulthood mean financial independence? Physical independence? Having the ability to contribute to society, rather than take from it?&lt;/li&gt;
  &lt;li&gt;I’m at the cusp at my weight loss goal, and it’s been difficult physically and emotionally. My insecurities about my body are as strong as they were at the beginning of journey. My diet is primarily paleo and I’ve been practicing &lt;a href=&quot;http://stronglifts.com&quot;&gt;Stronglifts 5x5&lt;/a&gt; for a while now.&lt;/li&gt;
  &lt;li&gt;I’m wondering about why I’m doing this (that is, writing this blog). I wonder if I can keep this up in the long term. I’m wondering how much I’m doing this for myself and how much I’m doing this for attention and an audience.&lt;/li&gt;
  &lt;li&gt;I’ve had the web design bug for a while now, and I love talking about typography, CMSs, and workflows.&lt;/li&gt;
  &lt;li&gt;I’m still as much a tech nerd and Apple fanboy as I’ve ever been. I think way too much about productivity and productivity workflows. &lt;/li&gt;
  &lt;li&gt;I have a lot of the same interests as I always have: fountain pens, menswear, design, literature, and philosophy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whew! I have way more to talk about than I thought.&lt;/p&gt;

&lt;p&gt;If you’d like to get updates from me, &lt;a href=&quot;&quot;&gt;sign up for blog posts via email&lt;/a&gt; (I promise, no spam!), or &lt;a href=&quot;http://twitter.com/RoginFarrer&quot;&gt;follow me on Twitter&lt;/a&gt;, or &lt;a href=&quot;/feed&quot;&gt;grab my RSS feed&lt;/a&gt; if that’s your thing.&lt;/p&gt;

&lt;p&gt;I’m also not using comments. At least not for now. I’ve had them on websites before, and I got insecure about not having any comments on my posts. If you have any thoughts, &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#114;&amp;#111;&amp;#103;&amp;#105;&amp;#110;&amp;#064;&amp;#114;&amp;#111;&amp;#103;&amp;#105;&amp;#110;&amp;#102;&amp;#097;&amp;#114;&amp;#114;&amp;#101;&amp;#114;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;shoot me a message via email&lt;/a&gt; or on &lt;a href=&quot;http://twitter.com/RoginFarrer&quot;&gt;Twitter&lt;/a&gt;! I’d love to know if you’re reading.&lt;/p&gt;

&lt;p&gt;That’s it for now. ’Til next time!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-Rogin&lt;/em&gt;&lt;/p&gt;
</content>
    </entry>
    
</feed>